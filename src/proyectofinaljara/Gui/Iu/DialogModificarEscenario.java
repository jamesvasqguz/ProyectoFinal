package proyectofinaljara.Gui.Iu;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JLabel;
import proyectofinaljara.objetos.*;

/**
 *
 * @author jara
 */
public class DialogModificarEscenario extends javax.swing.JDialog {
    private escenarios escenario;
    private JLabel[][] matrizLabel;
    /**
     * Creates new form DialogModificarEscenario
     */
    public DialogModificarEscenario(java.awt.Frame parent, boolean modal, escenarios escenario) {
        super(parent, modal);
        this.escenario  = escenario;
        initComponents();
        agregarTablero(escenario.getValorM(), escenario.getValorN());
    }
    
    public void agregarTablero(int m , int n){
        matrizLabel = new JLabel[m][n];
       for (int i = 0; i < m; i++) {
           for (int j = 0; j < n; j++) {
               matrizLabel[i][j] = new JLabel();
               matrizLabel[i][j].setSize(118, 57);
               matrizLabel[i][j].setLocation(40+(j*125), 35+(i*65));
               escenario.asignarColorImprimir(i, j, 1, matrizLabel, escenario.getTerrenos());
               matrizLabel[i][j].setVisible(true);
               panelTablero.add(matrizLabel[i][j]);
               matrizLabel[i][j].addMouseListener(new MouseAdapter() {
                   @Override
                   public void mousePressed(MouseEvent e){
                       for (int k = 0; k < m; k++) {
                           for (int l = 0; l < n; l++) {
                               if(e.getSource() == matrizLabel[k][l]){
                                   if(e.getButton()==MouseEvent.BUTTON1){
                                       System.out.println(k+", "+l);
                                       comprobar(k, l);
                                  }
                              }
                         }
                     }
                 }
                });
            }
           }
   }
    
    private void comprobar(int m, int n) {
        if (comprobarDistanciasRespectoAJugador(m, n, 4, escenario.getTerrenos(), 1) == true && comprobarDistanciasRespectoAJugador(m, n, 4, escenario.getTerrenos(), 2) == true &&
                comprobarDistanciasRespectoAJugador(m, n, 4, escenario.getTerrenos(), 3) == true && comprobarDistanciasRespectoAJugador(m, n, 4, escenario.getTerrenos(), 4) == true ) {
            System.out.println("Se agrega boot");
        }
    }
    
    private boolean  comprobarDistanciasRespectoAJugador(int i, int j, int cont, int[][] matriz, int caso) {
        try {
            if (cont == 0) {
                return true;
            }
            switch (caso) {
            case 1:
                if (matriz[i][j] == 4 || matriz[i][j] == 8 || cont < 0) {
                    return false;
                } else {
                    return comprobarDistanciasRespectoAJugador(i+1, j, cont-1, matriz, caso);
                }
            case 2:
                if (matriz[i][j] == 4 || matriz[i][j] == 8 || cont < 0) {
                    return false;
                } else {
                    return comprobarDistanciasRespectoAJugador(i-1, j, cont-1, matriz, caso);
                }
            case 3:
                if (matriz[i][j] == 4 || matriz[i][j] == 8 || cont < 0) {
                    return false;
                } else {
                    return comprobarDistanciasRespectoAJugador(i, j+1, cont-1, matriz, caso);
                }
            case 4:
                if (matriz[i][j] == 4 || matriz[i][j] == 8 || cont < 0) {
                    return false;
                } else {
                    return comprobarDistanciasRespectoAJugador(i, j-1, cont-1, matriz, caso);
                }
            default:
                return  false;
        }
        } catch (Exception e) {
            return true;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNombreDelEscenario = new javax.swing.JLabel();
        txtNombreDelEscenario = new javax.swing.JTextField();
        panelConScroll = new javax.swing.JScrollPane();
        panelTablero = new javax.swing.JPanel();
        botonFin = new javax.swing.JButton();
        lblPosicion = new javax.swing.JLabel();
        lblM = new javax.swing.JLabel();
        txtValorM = new javax.swing.JTextField();
        lblN = new javax.swing.JLabel();
        txtValorN = new javax.swing.JTextField();
        botonAgregarBoot = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblNombreDelEscenario.setText("Nombre del Escenario:");

        txtNombreDelEscenario.setEditable(false);

        javax.swing.GroupLayout panelTableroLayout = new javax.swing.GroupLayout(panelTablero);
        panelTablero.setLayout(panelTableroLayout);
        panelTableroLayout.setHorizontalGroup(
            panelTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 577, Short.MAX_VALUE)
        );
        panelTableroLayout.setVerticalGroup(
            panelTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 378, Short.MAX_VALUE)
        );

        panelConScroll.setViewportView(panelTablero);

        botonFin.setText("Finalizar Edición");

        lblPosicion.setText("Posición del Terreno Seleccionado:");

        lblM.setText("M:");

        txtValorM.setEditable(false);

        lblN.setText("N:");

        txtValorN.setEditable(false);

        botonAgregarBoot.setText("Agregar Boot");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelConScroll)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNombreDelEscenario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNombreDelEscenario))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonFin)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPosicion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblM)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtValorM, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblN)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtValorN, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonAgregarBoot)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreDelEscenario)
                    .addComponent(txtNombreDelEscenario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPosicion)
                    .addComponent(lblM)
                    .addComponent(txtValorM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblN)
                    .addComponent(txtValorN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonAgregarBoot))
                .addGap(11, 11, 11)
                .addComponent(panelConScroll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonFin)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregarBoot;
    private javax.swing.JButton botonFin;
    private javax.swing.JLabel lblM;
    private javax.swing.JLabel lblN;
    private javax.swing.JLabel lblNombreDelEscenario;
    private javax.swing.JLabel lblPosicion;
    private javax.swing.JScrollPane panelConScroll;
    private javax.swing.JPanel panelTablero;
    private javax.swing.JTextField txtNombreDelEscenario;
    private javax.swing.JTextField txtValorM;
    private javax.swing.JTextField txtValorN;
    // End of variables declaration//GEN-END:variables
}
