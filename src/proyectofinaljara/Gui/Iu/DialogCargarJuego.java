package proyectofinaljara.Gui.Iu;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.observablecollections.ObservableCollections;
import org.jdesktop.observablecollections.ObservableList;
import proyectofinaljara.Archivos;
import proyectofinaljara.objetos.*;

/**
 *
 * @author jara
 */
public class DialogCargarJuego extends javax.swing.JDialog {
    private Archivos<jugador> archivos;
    private jugador jugadorSeleccionado;
    private List<jugador> listaJugadores;
    private FrameEscritorio frameEscritorio; 
    private ObservableList<jugador> listaObservable;
    /**
     * Creates new form ReportsDialog
     */
    public DialogCargarJuego(java.awt.Frame parent, boolean modal, Archivos<jugador> archivos, FrameEscritorio frameEscritorio) {
        super(parent, modal);
        this.frameEscritorio  =frameEscritorio;
        this.archivos  = archivos;
        this.jugadorSeleccionado = new jugador();
        this.listaJugadores = new ArrayList<>();
        this.listaObservable = ObservableCollections.observableList(listaJugadores);
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jMenu9 = new javax.swing.JMenu();
        lblSeleccionado = new javax.swing.JLabel();
        txtJugadorSeleccionado = new javax.swing.JTextField();
        botonAgregarLista = new javax.swing.JButton();
        botonSeleccionar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        jMenu9.setText("jMenu9");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Reports");

        lblSeleccionado.setText("Jugador Seleccionado:");

        txtJugadorSeleccionado.setEditable(false);

        botonAgregarLista.setText("Agregar Lista");
        botonAgregarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarListaActionPerformed(evt);
            }
        });

        botonSeleccionar.setText("Seleccionar");
        botonSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSeleccionarActionPerformed(evt);
            }
        });

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${listaObservable}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tabla);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombreJugador}"));
        columnBinding.setColumnName("Nombre Jugador");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${contadorGanados}"));
        columnBinding.setColumnName("Contador Ganados");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${contadorPerdidos}"));
        columnBinding.setColumnName("Contador Perdidos");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${oro}"));
        columnBinding.setColumnName("Oro");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${vehiculosEnBatallas}"));
        columnBinding.setColumnName("Vehiculos En Batallas");
        columnBinding.setColumnClass(java.util.List.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${jugadorSeleccionado}"), tabla, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(tabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonAgregarLista)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonSeleccionar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSeleccionado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtJugadorSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSeleccionado)
                    .addComponent(txtJugadorSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonAgregarLista)
                    .addComponent(botonSeleccionar))
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAgregarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarListaActionPerformed
        // TODO add your handling code here:
        updateObservableList(archivos.leerListaDeArchivos(".jdr"));
    }//GEN-LAST:event_botonAgregarListaActionPerformed

    private void botonSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSeleccionarActionPerformed
        // TODO add your handling code here:
        frameEscritorio.setJugador(jugadorSeleccionado);
        this.setVisible(false);
    }//GEN-LAST:event_botonSeleccionarActionPerformed

    public void updateObservableList(List<jugador> jugadorListObservable) {
        this.listaObservable.clear();
        this.listaObservable.addAll(jugadorListObservable);
    }

    public jugador getJugadorSeleccionado() {
        return jugadorSeleccionado;
    }

    public void setJugadorSeleccionado(jugador jugadorSeleccionado) {
        jugador previous = this.jugadorSeleccionado;
        if(jugadorSeleccionado != null){
            try {
                this.jugadorSeleccionado = (jugador) jugadorSeleccionado.clone();
                txtJugadorSeleccionado.setText(this.jugadorSeleccionado.getNombreJugador());
                botonSeleccionar.setEnabled(true);
            } catch (CloneNotSupportedException ex) {
                Logger.getLogger(DialogCargarJuego.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        firePropertyChange("Jugador Seleccionada", previous, this.jugadorSeleccionado);
    }

    public List<jugador> getListaJugadores() {
        return listaJugadores;
    }

    public void setListaJugadores(List<jugador> listaJugadores) {
        this.listaJugadores = listaJugadores;
    }

    public ObservableList<jugador> getListaObservable() {
        return listaObservable;
    }

    public void setListaObservable(ObservableList<jugador> listaObservable) {
        this.listaObservable = listaObservable;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregarLista;
    private javax.swing.JButton botonSeleccionar;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblSeleccionado;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtJugadorSeleccionado;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
